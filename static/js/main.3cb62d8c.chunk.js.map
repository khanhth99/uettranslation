{"version":3,"sources":["assets/images/lg.png","screens/translateScreen/components/chooseTextCategory.js","screens/translateScreen/components/chooseLanguage.js","redux/actionTypes.js","helpers/axiosHelper.js","redux/actions/translateAction.js","screens/translateScreen/components/inputTranslateBox.js","constants/notificationConstant.js","components/NotificationBox.js","components/NotificationProvider.js","constants/envVar.js","helpers/localStorageDictHelpers.js","screens/translateScreen/components/resultTranslateBox.js","screens/translateScreen/translateScreen.js","screens/HistoryTranslate/EmptyHistory.js","screens/HistoryTranslate/EmptyVocabulary.js","helpers/localStorageHistoryHelper.js","context/reloadContext.js","screens/HistoryTranslate/ItemHistory.js","screens/HistoryTranslate/ItemVocabulary.js","screens/HistoryTranslate/index.js","App.js","reportWebVitals.js","i18n.js","redux/reducers/testReducer.js","redux/reducers/translateReducer.js","redux/reducers/index.js","redux/store.js","index.js","screens/translateScreen/translateStyle.module.css","screens/HistoryTranslate/historyStyle.module.css"],"names":["ChooseLanguage","props","t","useTranslation","setTextCategory","useState","variantText","setVariantText","variantDoc","setVariantDoc","Button","onClick","console","log","style","marginRight","size","variant","exchangeLanguage","fromLanguage","toLanguage","setFromLanguage","setToLanguage","listLanguage","text","code","buttonFromLanguage","Dropdown","Toggle","id","Menu","map","item","key","Item","href","language","buttonToLanguage","Col","Row","md","ButtonToolbar","lineHeight","textAlign","className","styles","buttonExchange","SAY_AN_DEP_TRAI","CREATE_TRANSLATION","axiosDefault","axios","create","baseURL","headers","timeout","createTranslation","data","Promise","resolve","reject","post","then","result","catch","error","makeTranslation","translationResult","translationData","dataTo","direction","dataFrom","type","payload","fromText","toText","makeTranslationAsync","dispatch","a","axiosHelper","warn","connect","state","translateReducer","translateAction","timeOutID","isLoading","textInputTranslate","setTextInputTranslate","setLoading","setResultTranslate","useEffect","clearTimeout","setTimeout","handleChange","event","preventDefault","target","value","paddingTop","paddingBottom","paddingRight","minRows","onChange","from_language","padding","buttonUtility","FAILURE_NOTI","INFO_NOTI","ADD_NOTI","REMOVE_NOTI","NotificationBox","message","dispatchNoti","exit","setExit","typeVariantMapper","Alert","Heading","NotificationContext","React","createContext","NotificationProvider","children","useReducer","action","filter","ele","notifications","Provider","note","DICT_KEY","HISTORY_KEY","isValValid","allKeys","Object","keys","length","every","includes","createRecord","localStorage","getItem","dictData","addedRecord","blankArray","splice","setItem","JSON","stringify","dictDataArr","parse","pop","listRecord","removeRecord","removeAllRecord","removeItem","ResultTranslateBox","resultTranslate","useContext","v4","useNotification","useSelector","saveTranslateToVocabulary","newDict","Fomart","textTranslateFrom","textTranslateTo","Date","toString","DictHelper","minHeight","resultTranslate_bandich","resultTranslate_dadich","navigator","clipboard","writeText","TranslateScreen","textCategory","setExchangeLanguahe","Container","fluid","headerTop","title","Image","width","src","Logo","alt","roundedCircle","content","borderBottom","boxTranslate","borderRight","position","documentOption","fontSize","color","EmptyHistory","notify","flex","display","justifyContent","flexDirection","height","EmptyVocabulary","addedId","now","updateRecord","hisData","hisDataArr","hisDataArr1","forEach","isSave","push","updateAllRecord","i","ReloadContext","ItemHistory","Reload","historyData","setHistoryData","getAllHistory","historyHelperHis","userHistoryData","reload","SaveTranslate","history","saveWord","textFrom","textTo","codeFrom","codeTo","historyHelperDict","setReload","removeHisTran","borderBottomWidth","borderColor","marginLeft","marginTop","textAlignLast","disabled","margin","ItemVocabulary","setDictData","getAllTranslationDict","dictHelpers","userDictData","onRemoveDict","HistoryHelpers","prevReload","dict","marginBottom","DoHaveHistoryData","isHistoryData","setIsHistoryData","addNewHistory","newHistory","removeHisTranAll","getAllTranslationHistory","title_history","alignSelf","DoHaveDictData","isDictData","setIsDictData","removeDictTranAll","boxTranslate_history","HistoryTranslate","span","offset","content__history","Tabs","defaultActiveKey","Tab","eventKey","tabClassName","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","resources","vi","translation","require","i18n","use","initReactI18next","init","lng","fallbackLng","debug","keySeparator","interpolation","escapeValue","initialState","anDepTrai","combineReducers","testReducer","middleware","thunk","store","createStore","rootreducer","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.3cb62d8c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/lg.d3344d72.png\";","/* eslint-disable react/prop-types */\r\nimport React, { useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { VscWordWrap } from 'react-icons/vsc';\r\nimport { BsFileEarmarkText } from 'react-icons/bs';\r\nimport { useTranslation  } from 'react-i18next';\r\n\r\nexport default function ChooseLanguage(props) {\r\n\tconst { t } = useTranslation();\r\n\tconst {\r\n\t\tsetTextCategory\r\n\t} = props;\r\n\tconst [variantText, setVariantText] = useState('primary');\r\n\tconst [variantDoc, setVariantDoc] = useState('outline-primary');\r\n\tconst selectOptionText = () => {\r\n\t\tsetVariantText('primary');\r\n\t\tsetVariantDoc('outline-primary');\r\n\t\tsetTextCategory(true);\r\n\t\tconsole.log('text');\r\n\t};\r\n\tconst selectOptionDocument = () => {\r\n\t\tsetVariantText('outline-primary');\r\n\t\tsetVariantDoc('primary');\r\n\t\tsetTextCategory(false);\r\n\t\tconsole.log('document');\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Button onClick={() => selectOptionText()} style={{ marginRight: '10px' }} size=\"sm\" variant={variantText}><VscWordWrap /> {t('Translate.vanban')}</Button>\r\n\t\t\t<Button onClick={() => selectOptionDocument()} size=\"sm\" variant={variantDoc}><BsFileEarmarkText /> {t('Translate.tailieu')}</Button>\r\n\t\t</>\r\n\t);\r\n}","/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\nimport {Row, Col, ButtonToolbar, Button, Dropdown} from 'react-bootstrap';\r\nimport styles from '../translateStyle.module.css';\r\nimport { FaExchangeAlt } from 'react-icons/fa';\r\nimport { HiLightBulb } from 'react-icons/hi';\r\nimport { useTranslation  } from 'react-i18next';\r\n\r\nexport default function ChooseLanguage(props) {\r\n\tconst { t } = useTranslation();\r\n\tconst {\r\n\t\texchangeLanguage,\r\n\t\tfromLanguage,\r\n\t\ttoLanguage,\r\n\t\tsetFromLanguage,\r\n\t\tsetToLanguage,\r\n\t\t// setExchangeLanguah\r\n\t} = props;\r\n\t// const listLanguage = [t('Translate.listLanguage.trung'), t('Translate.listLanguage.lao'), t('Translate.listLanguage.khome')];\r\n\tconst listLanguage = [\r\n\t\t{\r\n\t\t\ttext: t('Translate.listLanguage.trung'),\r\n\t\t\tcode: 'zh'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttext: t('Translate.listLanguage.lao'),\r\n\t\t\tcode: 'lo'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttext: t('Translate.listLanguage.khome'),\r\n\t\t\tcode: 'km'\r\n\t\t}\r\n\t];\r\n\tconst changeFromLanguage = (language) => {\r\n\t\tif (exchangeLanguage) {\r\n\t\t\tsetFromLanguage(language);\r\n\t\t\tsetToLanguage({\r\n\t\t\t\ttext: t('Translate.listLanguage.viet'),\r\n\t\t\t\tcode: 'vi'\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tsetFromLanguage({\r\n\t\t\t\ttext: t('Translate.listLanguage.viet'),\r\n\t\t\t\tcode: 'vi'\r\n\t\t\t});\r\n\t\t\tsetToLanguage(language);\r\n\t\t}\r\n\t};\r\n\tconst buttonFromLanguage = () => {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Dropdown size=\"sm\">\r\n\t\t\t\t\t<Dropdown.Toggle size=\"sm\" variant=\"success\" id=\"dropdown-basic\">{exchangeLanguage?fromLanguage.text:toLanguage.text}</Dropdown.Toggle>\r\n\t\t\t\t\t<Dropdown.Menu>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlistLanguage.map((item, key) => \r\n\t\t\t\t\t\t\t\t<Dropdown.Item key={key} size=\"sm\" href=\"\" onClick={() => changeFromLanguage(item)}>{item.text}</Dropdown.Item>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</Dropdown.Menu>\r\n\t\t\t\t</Dropdown>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\tconst buttonToLanguage = () => {\r\n\t\treturn (\r\n\t\t\t<Button size=\"sm\" variant=\"outline-info\">{!exchangeLanguage?fromLanguage.text:toLanguage.text}</Button>\r\n\t\t);\r\n\t};\r\n\t// const switchLanguage = () => {\r\n\t// \tsetExchangeLanguahe(exchangeLanguage => !exchangeLanguage);\r\n\t// \tconst tmp = fromLanguage;\r\n\t// \tsetFromLanguage(toLanguage);\r\n\t// \tsetToLanguage(tmp);\r\n\t// };\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Col>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col md={12}>\r\n\t\t\t\t\t\t<ButtonToolbar>\r\n\t\t\t\t\t\t\t<Button size=\"sm\" variant=\"outline-info\" style={{ marginRight: '5px' }}><HiLightBulb style={{ lineHeight: '5px' }} />{t('Translate.phathienngonngu')}</Button>\r\n\t\t\t\t\t\t\t{exchangeLanguage ? buttonFromLanguage() : buttonToLanguage()}\r\n\t\t\t\t\t\t</ButtonToolbar>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Col>\r\n\t\t\t<Col md={1} style={{ textAlign: 'center' }}>\r\n\t\t\t\t<button className={[styles.buttonExchange]} >\r\n\t\t\t\t\t<FaExchangeAlt />\r\n\t\t\t\t</button>\r\n\t\t\t</Col>\r\n\t\t\t<Col>\r\n\t\t\t\t{!exchangeLanguage ? buttonFromLanguage() : buttonToLanguage()}\r\n\t\t\t</Col>\r\n\t\t</>\r\n\t);\r\n}","export const SAY_AN_DEP_TRAI = 'SAY_AN_DEP_TRAI';\r\nexport const CREATE_TRANSLATION = 'CREATE_TRANSLATION';","import axios from 'axios';\r\n\r\nconst axiosDefault = axios.create({\r\n\tbaseURL: 'http://nmtuet.ddns.net:1710/',\r\n\theaders: {\r\n\t\t'Content-Type': 'application/json',\r\n\t},\r\n\ttimeout: 5000,\r\n});\r\n\r\n// sample data\r\n// {\"data\":\"年我国利用外\",\"direction\":\"zh-vi\"}\r\n// eslint-disable-next-line no-unused-vars\r\nexport const createTranslation = (data) => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\taxiosDefault\r\n\t\t\t.post('translate_paragraphs', data)\r\n\t\t\t.then((result) => {\r\n\t\t\t\tresolve(result.data);\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\t// console.warn('axios helper', error);\r\n\t\t\t\treject(error);\r\n\t\t\t});\r\n\t});\r\n};\r\n","import { CREATE_TRANSLATION } from '../actionTypes';\r\nimport * as axiosHelper from '../../helpers/axiosHelper';\r\n\r\n\r\nexport const makeTranslation = (translationResult, translationData) => {\r\n\tconst dataTo = translationResult;\r\n\tconst { direction } = translationData;\r\n\tconst dataFrom = translationData.data;\r\n\treturn {\r\n\t\ttype: CREATE_TRANSLATION,\r\n\t\tpayload: {\r\n\t\t\tfromText: dataFrom,\r\n\t\t\ttoText: dataTo,\r\n\t\t\tdirection,\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const makeTranslationAsync = (translationData) => async (dispatch) => {\r\n\ttry {\r\n\t\tconst translationResult = await axiosHelper.createTranslation(translationData);\r\n\t\tdispatch(makeTranslation(translationResult.data.data, translationData));\r\n\t} catch(error) {\r\n\t\tconsole.warn(error);\r\n\t}\r\n};\r\n","/* eslint-disable react/prop-types */\r\nimport React, { useEffect } from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n// import { HiVolumeUp } from 'react-icons/hi';\r\n// import { BsFillMicFill } from 'react-icons/bs';\r\nimport { CgClose } from 'react-icons/cg';\r\nimport styles from '../translateStyle.module.css';\r\nimport { useTranslation  } from 'react-i18next';\r\n// import * as axiosHelper from '../../../helpers/axiosHelper';\r\nimport * as translateAction from '../../../redux/actions/translateAction';\r\n\r\nfunction InputTranslateBox(props) {\r\n\tconst {\r\n\t\tfromLanguage,\r\n\t\ttoLanguage,\r\n\t\tisLoading,\r\n\t\ttextInputTranslate,\r\n\t\tsetTextInputTranslate,\r\n\t\tsetLoading,\r\n\t\tsetResultTranslate,\r\n\t\tmakeTranslation,\r\n\t\ttoText\r\n\t} = props;\r\n\tconst { t } = useTranslation();\r\n\tlet timeOutID;\r\n\tuseEffect(() => {\r\n\t\tif (isLoading){\r\n\t\t\tif(textInputTranslate === ''){\r\n\t\t\t\tsetResultTranslate(t('Translate.bandich'));\r\n\t\t\t}else{\r\n\t\t\t\tsetResultTranslate(t('Translate.dangdich'));\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tsetResultTranslate(toText);\r\n\t\t}\r\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [isLoading, textInputTranslate, toText]);\r\n\tuseEffect(() => {\r\n\t\tclearTimeout(timeOutID);\r\n\t\tif(textInputTranslate !== ''){\r\n\t\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t\t\ttimeOutID = setTimeout(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tawait makeTranslation({ data: textInputTranslate, direction: `${fromLanguage.code}-${toLanguage.code}` });\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\t// setResultTranslate(toText);\r\n\t\t\t\t\t// const translationResult = await axiosHelper.createTranslation();\r\n\t\t\t\t\t// // return translationResult;\r\n\t\t\t\t\t// setResultTranslate(translationResult.message);\r\n\t\t\t\t\t// console.log(translationResult.message);\r\n\t\t\t\t\t// if(translationResult && translationResult === ''){\r\n\t\t\t\t\t// \tsetResultTranslate(textInputTranslate);\r\n\t\t\t\t\t// }\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t// console.warn('translateScreen makeTranslation service', error);\r\n\t\t\t\t// return error;\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t}\r\n\t\t\t}, 1000);\r\n\t\t}else{\r\n\t\t\tsetResultTranslate(t('Translate.bandich'));\r\n\t\t}\r\n\t}, [textInputTranslate]);\r\n\tconst handleChange = async (event) => {\r\n\t\tclearTimeout(timeOutID);\r\n\t\tevent.preventDefault();\r\n\t\tsetTextInputTranslate(event.target.value);\r\n\t\t// setResultTranslate(t('Translate.dangdich'));\r\n\t\tsetLoading(true);\r\n\t\t// if(event.target.value === ''){\r\n\t\t// \tsetResultTranslate(t('Translate.bandich'));\r\n\t\t// \tsetLoading(true);\r\n\t\t// }\r\n\t};\r\n\tconst closeInput = () => {\r\n\t\tsetTextInputTranslate('');\r\n\t\tsetResultTranslate(t('Translate.bandich'));\r\n\t\tsetLoading(true);\r\n\t};\r\n\r\n\t// const genRandomNoti = () => {\r\n\t// \tconst utterThis = new SpeechSynthesisUtterance('你好');\r\n\t// \tutterThis.rate = 1;\r\n\t// \tutterThis.lang = 'zh-CN';\r\n\t// \tsetTimeout(() => {\r\n\t// \t\tsynthRef.current.speak(utterThis);\r\n\t// \t}, 1000);\r\n\t// };\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Row style={{ paddingTop: '10px', paddingBottom: '30px' }}>\r\n\t\t\t\t<Col md={11} style={{ paddingRight: '0' }} >\r\n\t\t\t\t\t<TextareaAutosize\r\n\t\t\t\t\t\tminRows={3}\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tvalue={textInputTranslate}\r\n\t\t\t\t\t\t// ref={textareaRef}\r\n\t\t\t\t\t\tclassName={[styles.from_language]}/>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md={1} style={{ padding: '0' }} className={['text-center']}>\r\n\t\t\t\t\t{!isLoading?(<button onClick={closeInput} className={styles.buttonUtility}><CgClose /></button>):''}\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\r\n\t\t\t{/* <Row className=\"align-items-center\" style={{ height: '50px' }}>\r\n\t\t\t\t<Col md={1}>\r\n\t\t\t\t\t<button onClick={() => genRandomNoti()} className={styles.buttonUtility} ><BsFillMicFill /></button>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md={1}>\r\n\t\t\t\t\t<button onClick={() => genRandomNoti()} className={styles.buttonUtility}><HiVolumeUp /></button>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row> */}\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tmakeTranslation: async (translationData) => await dispatch(translateAction.makeTranslationAsync(translationData))\r\n\t};\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tfromText: state.translateReducer.fromText,\r\n\t\ttoText: state.translateReducer.toText,\r\n\t\tdirection: state.translateReducer.direction,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InputTranslateBox);\r\n","export const SUCCESS_NOTI = 'SUCCESS_NOTI';\r\nexport const FAILURE_NOTI = 'FAILURE_NOTI';\r\nexport const INFO_NOTI = 'INFO_NOTI';\r\nexport const ADD_NOTI = 'ADD_NOTI';\r\nexport const REMOVE_NOTI = 'REMOVE_NOTI';","import React, { useState, useEffect } from 'react';\r\nimport { REMOVE_NOTI, INFO_NOTI, FAILURE_NOTI } from '../constants/notificationConstant';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport { useTranslation  } from 'react-i18next'; \r\n\r\nexport default function NotificationBox(props) {\r\n\t// eslint-disable-next-line react/prop-types\r\n\tconst { message, dispatchNoti, id, type = INFO_NOTI } = props;\r\n\tconst { t } = useTranslation();\r\n\tconst [exit, setExit] = useState(false);\r\n\r\n\tconst typeVariantMapper = {};\r\n\ttypeVariantMapper[INFO_NOTI] = 'info';\r\n\ttypeVariantMapper[FAILURE_NOTI] = 'danger';\r\n\r\n\tuseEffect(() => {\r\n\t\t// Wait 3 sec b4 close the noti\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetExit(true);\r\n\t\t\t// remove this from DOM\r\n\t\t\t// Wait 2 sec b4 remove\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tdispatchNoti({\r\n\t\t\t\t\ttype: REMOVE_NOTI,\r\n\t\t\t\t\tid,\r\n\t\t\t\t});\r\n\t\t\t}, 2000);\r\n\t\t}, 3000);\r\n\t});\r\n\r\n\treturn (\r\n\t\t<Alert variant={typeVariantMapper[type]} className={`notification-item ${exit ? 'notification-exit' : ''}`}>\r\n\t\t\t{!exit ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{ type === FAILURE_NOTI ? <Alert.Heading>{t('loi')}</Alert.Heading> : null }\r\n\t\t\t\t\t<p>{message}</p>\r\n\t\t\t\t</>\r\n\t\t\t) : null}\r\n\t\t</Alert>\r\n\t);\r\n}\r\n","import React, { useContext, useReducer } from 'react';\r\nimport { v4 } from 'uuid';\r\nimport { ADD_NOTI, REMOVE_NOTI, INFO_NOTI } from '../constants/notificationConstant';\r\nimport NotificationBox from './NotificationBox';\r\n\r\nconst NotificationContext = React.createContext();\r\n\r\n/**\r\n * Return a function which creates a new notification\r\n * The returned function takes 2 params\r\n * \r\n * param {string} message the message to be displaed\r\n * param {string} type SUCCESS, INFO or ERROR, find the constants in\r\n * constants/notificationConstants.js\r\n * @author AnLG\r\n * @return { function(string, string) : void } returned function\r\n*/\r\nexport const useNotification = () => {\r\n\tconst dispatch = useContext(NotificationContext);\r\n\r\n\tconst createNoti = (message, type = INFO_NOTI) => {\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_NOTI,\r\n\t\t\tpayload: {\r\n\t\t\t\tid: v4(),\r\n\t\t\t\ttype,\r\n\t\t\t\tmessage\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\t\r\n\treturn createNoti;\r\n};\r\n\r\nexport default function NotificationProvider(props) {\r\n\t// eslint-disable-next-line react/prop-types\r\n\tconst { children } = props;\r\n\r\n\tconst [notifications, dispatch] = useReducer((state, action) => {\r\n\t\tswitch (action.type) {\r\n\t\tcase ADD_NOTI:\r\n\t\t\treturn [...state, {...action.payload}];\r\n\t\tcase REMOVE_NOTI:\r\n\t\t\treturn state.filter(ele => ele.id !== action.id);\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}, []\r\n\t);\r\n\t\r\n\t// {\r\n\t// \tid: v4(),\r\n\t// \ttype: SUCCESS_NOTI,\r\n\t// \tmessage: 'Hello An'\r\n\t// }, {\r\n\t// \tid: v4(),\r\n\t// \ttype: SUCCESS_NOTI,\r\n\t// \tmessage: 'Hello Dep Trai'\r\n\t// }\r\n\r\n\r\n\treturn (\r\n\t\t<NotificationContext.Provider value={dispatch}>\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"notification-wrapper\">\r\n\t\t\t\t\t{notifications\r\n\t\t\t\t\t\t.map(note => \r\n\t\t\t\t\t\t\t<NotificationBox\r\n\t\t\t\t\t\t\t\tkey={note.id}\r\n\t\t\t\t\t\t\t\tdispatchNoti={dispatch}\r\n\t\t\t\t\t\t\t\tid ={note.id} \r\n\t\t\t\t\t\t\t\tmessage={note.message}\r\n\t\t\t\t\t\t\t\ttype={note.type} />)\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t\t{children}\r\n\t\t\t</div>\r\n\t\t</NotificationContext.Provider>\r\n\t);\r\n\r\n}","export const DEFAULT_LANGUAGE = 'vi';\r\nexport const DICT_KEY = '@turv87mafu';\r\nexport const HISTORY_KEY = 'ff32tfwi42';\r\n","// eslint-disable-next-line import/no-unresolved\r\nimport { DICT_KEY } from '../constants/envVar';\r\n\r\n// THE DICTIONARY IS AN ARRAY\r\n\r\n/**\r\n * Returns true if value to be used is an object having keys: textTranslateFrom, textTranslateTo.\r\n *\r\n * @author AnLG\r\n * @param {object} value object to be checked\r\n * @return {boolean} true/false.\r\n */\r\nconst isValValid = (value) => {\r\n\tconst allKeys = Object.keys(value);\r\n\t// console.log(allKeys);\r\n\tif (!(typeof value === 'object' && allKeys.length === 7)) {\r\n\t\t// console.warn(\r\n\t\t//   'Invalid value, need keys: textTranslateFrom, textTranslateTo',\r\n\t\t// );\r\n\t\treturn false;\r\n\t}\r\n\tconst requiredKeys = [\r\n\t\t'id',\r\n\t\t'textTranslateFrom',\r\n\t\t'textTranslateTo',\r\n\t\t'textFrom',\r\n\t\t'codeFrom',\r\n\t\t'textTo',\r\n\t\t'codeTo'\r\n\t];\r\n\tconst doesContainAllKeys = requiredKeys.every((item) => allKeys.includes(item));\r\n\tif (!doesContainAllKeys) {\r\n\t\t// console.warn(\r\n\t\t//   'Invalid value, need keys: textTranslateFrom, textTranslateTo',\r\n\t\t// );\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn true;\r\n};\r\n\r\n// const genId = () => Date.now().toString();\r\n\r\n/**\r\n * Create a new record for user dictionary and return the added record, return null otherwise.\r\n *\r\n * @author AnLG\r\n * @param {object} value object to added\r\n * @return {object} added record or null.\r\n */\r\nexport const createRecord = async (value) => {\r\n\tif (!isValValid(value)) {\r\n\t\treturn null;\r\n\t}\r\n\ttry {\r\n\t\tconst dictData = await localStorage.getItem(DICT_KEY);\r\n\t\t// const addedId = genId();\r\n\t\t// console.log(addedId);\r\n\t\t// if there is no dict data, create new one\r\n\t\tif (dictData === null) {\r\n\t\t\tconst addedRecord = { ...value };\r\n\t\t\tconst blankArray = [];\r\n\t\t\tblankArray.splice(0, 0, addedRecord);\r\n\t\t\tawait localStorage.setItem(DICT_KEY, JSON.stringify(blankArray));\r\n\t\t\treturn { ...addedRecord };\r\n\t\t}\r\n\r\n\t\tconst dictDataArr = JSON.parse(dictData);\r\n\t\tconst addedRecord = { ...value };\r\n\t\tdictDataArr.splice(0, 0, addedRecord);\r\n\t\tif (dictDataArr.length > 20) {\r\n\t\t\tdictDataArr.pop();\r\n\t\t}\r\n\t\tawait localStorage.setItem(DICT_KEY, JSON.stringify(dictDataArr));\r\n\t\treturn { ...addedRecord };\r\n\t} catch (error) {\r\n\t\t// console.warn(error);\r\n\t\treturn null;\r\n\t}\r\n};\r\n\r\n/**\r\n * Get list of words in user translation history, return blank array if there is none.\r\n *\r\n * @author AnLG\r\n * @return {array} list of words.\r\n */\r\nexport const listRecord = async () => {\r\n\t// const limit = 10;\r\n\t// const offset = 0;\r\n\ttry {\r\n\t\tconst dictData = await localStorage.getItem(DICT_KEY);\r\n\t\tif (dictData === null) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\t\tconst dictDataArr = JSON.parse(dictData);\r\n\t\t// const slicedData = dictDataArr.slice(offset, offset + limit);\r\n\t\treturn dictDataArr;\r\n\t} catch (error) {\r\n\t\t// console.warn(error);\r\n\t\treturn [];\r\n\t}\r\n};\r\n/**\r\n * Get list of words in user translation history, return blank array if there is none.\r\n *\r\n * @author AnLG\r\n * @return {array} list of words.\r\n */\r\nexport const listRecordLimit = async () => {\r\n\tconst limit = 3;\r\n\tconst offset = 0;\r\n\ttry {\r\n\t\tconst dictData = await localStorage.getItem(DICT_KEY);\r\n\t\tif (dictData === null) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\t\tconst dictDataArr = JSON.parse(dictData);\r\n\t\tconst slicedData = dictDataArr.slice(offset, offset + limit);\r\n\t\t// console.log(`slide data ${JSON.stringify(slicedData)}`);\r\n\t\treturn slicedData;\r\n\t} catch (error) {\r\n\t\t// console.warn(error);\r\n\t\treturn [];\r\n\t}\r\n};\r\n/**\r\n * Delete and then return the deleted record, return null otherwise.\r\n *\r\n * @author AnLG\r\n * @param {number} id id to be deleted\r\n * @return {boolean} true or null.\r\n */\r\nexport const removeRecord = async (id) => {\r\n\ttry {\r\n\t\tconst dictData = await localStorage.getItem(DICT_KEY);\r\n\t\tif (dictData === null) {\r\n\t\t\t// console.warn('Nothing to delete');\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet dictDataArr = JSON.parse(dictData);\r\n\t\tdictDataArr = dictDataArr.filter((item) => item.id !== id);\r\n\t\t// const deletedRecord = { ...dictDataArr[deletedID] };\r\n\t\t// dictDataArr.splice(deletedID, 1);\r\n\t\tawait localStorage.setItem(DICT_KEY, JSON.stringify(dictDataArr));\r\n\t\treturn true;\r\n\t} catch (error) {\r\n\t\t// console.warn(error);\r\n\t\treturn null;\r\n\t}\r\n};\r\n\r\n/**\r\n * Delete and then return the deleted record, return null otherwise.\r\n *\r\n * @author AnLG\r\n * @param {number} id id to be deleted\r\n * @return {object} deleted record or null.\r\n */\r\nexport const removeAllRecord = async () => {\r\n\ttry {\r\n\t\tawait localStorage.removeItem(DICT_KEY);\r\n\t\treturn true;\r\n\t} catch (error) {\r\n\t\t// console.warn(error);\r\n\t\treturn null;\r\n\t}\r\n};","/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { useTranslation  } from 'react-i18next';\r\nimport { BsStar } from 'react-icons/bs';\r\nimport { MdContentCopy } from 'react-icons/md';\r\nimport styles from '../translateStyle.module.css';\r\nimport { useNotification } from '../../../components/NotificationProvider';\r\nimport Fomart from './Format.json';\r\n// import * as historyHelperHis from '../../../helpers/localStorageHistoryHelper.js';\r\nimport * as DictHelper from '../../../helpers/localStorageDictHelpers.js';\r\nimport { useSelector } from 'react-redux';\r\nexport default function ResultTranslateBox(props) {\r\n\tconst {isLoading, resultTranslate} = props;\r\n\tconst dispatchNoti = useNotification();\r\n\tconst { t } = useTranslation();\r\n\tconst { fromText, toText, direction } = useSelector((state) => state.translateReducer);\r\n\tconst copyTextResult = (text) => {\r\n\t\tnavigator.clipboard.writeText(text);\r\n\t\tdispatchNoti(t('Translate.daSaoChep'));\r\n\t};\r\n\tconst saveTranslateToVocabulary = async () => {\r\n\t\tconst newDict = {\r\n\t\t\t...Fomart[direction],\r\n\t\t\ttextTranslateFrom: fromText,\r\n\t\t\ttextTranslateTo: toText,\r\n\t\t\tid: new Date().toString()\r\n\t\t};\r\n\t\tconst newDictData = await DictHelper.createRecord(newDict);\r\n\t\tif(newDictData !== null){\r\n\t\t\tdispatchNoti(t('Translate.daThemVaoTuVung'));\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Row style={{ paddingTop: '10px', minHeight: '108px' }}>\r\n\t\t\t\t<Col md={12}>\r\n\t\t\t\t\t<p className={isLoading?styles.resultTranslate_bandich:styles.resultTranslate_dadich}>{resultTranslate}</p>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row className=\"\">\r\n\t\t\t\t{\r\n\t\t\t\t\t!isLoading?(\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t{/* <Col md={1}> */}\r\n\t\t\t\t\t\t\t{/* <button className={styles.buttonUtility}><HiVolumeUp /></button> */}\r\n\t\t\t\t\t\t\t{/* </Col> */}\r\n\t\t\t\t\t\t\t<Col className=\"align-self-end\">\r\n\t\t\t\t\t\t\t\t<button onClick={() => copyTextResult(resultTranslate)} className={styles.buttonUtility}><MdContentCopy /></button>\r\n\t\t\t\t\t\t\t\t<button onClick={() => saveTranslateToVocabulary()} className={styles.buttonUtility}><BsStar /></button>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t):\r\n\t\t\t\t\t\t('')\r\n\t\t\t\t}\r\n\t\t\t</Row>\r\n\t\t</>\r\n\t);\r\n}","import React, { useState } from 'react';\r\nimport { \r\n\tContainer,\r\n\tRow,\r\n\tCol,\r\n\tImage,\r\n\tButton,\r\n} from 'react-bootstrap';\r\nimport { useTranslation  } from 'react-i18next';\r\n// import { connect } from 'react-redux';\r\nimport styles from './translateStyle.module.css';\r\nimport Logo from '../../assets/images/lg.png';\r\nimport ChooseTextCategory from './components/chooseTextCategory';\r\nimport ChooseLanguage from './components/chooseLanguage';\r\nimport InputTranslateBox from './components/inputTranslateBox'; \r\nimport ResultTranslateBox from './components/resultTranslateBox';\r\n\r\nfunction TranslateScreen() {\r\n\t// eslint-disable-next-line react/prop-types\r\n\t// const { toText } = props;\r\n\tconst { t } = useTranslation();\r\n\tconst [textCategory, setTextCategory] = useState(true);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tconst [fromLanguage, setFromLanguage] = useState({\r\n\t\ttext: t('Translate.listLanguage.trung'),\r\n\t\tcode: 'zh'\r\n\t});\r\n\tconst [toLanguage, setToLanguage] = useState({\r\n\t\ttext: t('Translate.listLanguage.viet'),\r\n\t\tcode: 'vi'\r\n\t});\r\n\tconst [exchangeLanguage, setExchangeLanguahe] = useState(true);\r\n\tconst [textInputTranslate, setTextInputTranslate] = useState('');\r\n\tconst [resultTranslate, setResultTranslate] = useState('');\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Container fluid>\r\n\t\t\t\t<Row className={styles.headerTop}>\r\n\t\t\t\t\t<Col className={styles.title}>\r\n\t\t\t\t\t\t<Image style={{ width: '40px' }} src={Logo} alt=\"\" roundedCircle /> {t('Translate.title')}\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t\t<Container>\r\n\t\t\t\t<Row style={{ padding: '10px 0'}}>\r\n\t\t\t\t\t<ChooseTextCategory textCategory={textCategory} setTextCategory={setTextCategory} />\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row className={styles.content}>\r\n\t\t\t\t\t<Col md={12} style={{ padding: '10px', borderBottom: '1px solid #ccc' }} >\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<ChooseLanguage\r\n\t\t\t\t\t\t\t\texchangeLanguage={exchangeLanguage}\r\n\t\t\t\t\t\t\t\tfromLanguage={fromLanguage}\r\n\t\t\t\t\t\t\t\ttoLanguage={toLanguage}\r\n\t\t\t\t\t\t\t\tsetFromLanguage={setFromLanguage}\r\n\t\t\t\t\t\t\t\tsetToLanguage={setToLanguage}\r\n\t\t\t\t\t\t\t\tsetExchangeLanguahe={setExchangeLanguahe}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col md={12} className={styles.boxTranslate}>\r\n\t\t\t\t\t\t{textCategory?(\r\n\t\t\t\t\t\t\t<Row style={{ minHeight: '150px' }}>\r\n\t\t\t\t\t\t\t\t<Col md={6} style={{ borderRight: '1px solid #ccc' }}>\r\n\t\t\t\t\t\t\t\t\t<InputTranslateBox\r\n\t\t\t\t\t\t\t\t\t\tfromLanguage={fromLanguage}\r\n\t\t\t\t\t\t\t\t\t\ttoLanguage={toLanguage}\r\n\t\t\t\t\t\t\t\t\t\ttextInputTranslate={textInputTranslate}\r\n\t\t\t\t\t\t\t\t\t\tsetTextInputTranslate={setTextInputTranslate}\r\n\t\t\t\t\t\t\t\t\t\tsetLoading={setLoading}\r\n\t\t\t\t\t\t\t\t\t\tsetResultTranslate={setResultTranslate}\r\n\t\t\t\t\t\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col md={6} style={{ position: 'relative' }}>\r\n\t\t\t\t\t\t\t\t\t<ResultTranslateBox \r\n\t\t\t\t\t\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\t\t\t\t\t\tresultTranslate={resultTranslate}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t):(\r\n\t\t\t\t\t\t\t<Row style={{ minHeight: '150px' }} className={styles.documentOption}>\r\n\t\t\t\t\t\t\t\t<Col md={12} >\r\n\t\t\t\t\t\t\t\t\t<span style={{ fontSize: '20px' }}>Chọn tài liệu</span><br />\r\n\t\t\t\t\t\t\t\t\t<span style={{ color: '#616161' }}>Tải lên tệp .doc, .docx, .pdf, .txt trên máy tính của bạn</span>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col md={12} style={{ padding: '10px' }} >\r\n\t\t\t\t\t\t\t\t\t<Button size='sm'>Chọn tệp của bạn</Button>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t</Container>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default TranslateScreen;\r\n","/* eslint-disable quotes */\r\nimport React from 'react';\r\nimport { BiHourglass } from 'react-icons/bi';\r\n\r\nexport default function EmptyHistory(props) {\r\n\r\n\t// eslint-disable-next-line react/prop-types\r\n\tconst { notify } = props;\r\n\treturn (\r\n\t\t<div style={{ textAlign: 'center', flex: 1, display: 'flex', justifyContent: 'center', flexDirection: 'column', height: 250 }}>\r\n\t\t\t<div>\r\n\t\t\t\t<BiHourglass color=\"#095F00\" size={40} />\r\n\t\t\t\t<h2 style={{ color: '#7A7A7A', paddingTop: 10 }}>{notify}</h2>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport { BsBook } from 'react-icons/bs';\r\n\r\n\r\nexport default function EmptyVocabulary(props) {\r\n\t// eslint-disable-next-line react/prop-types\r\n\tconst { notify } = props;\r\n\treturn (\r\n\t\t<div style={{ textAlign: 'center', flex: 1, display: 'flex', justifyContent: 'center', flexDirection: 'column', height: 250 }}>\r\n\t\t\t<div>\r\n\t\t\t\t<BsBook color=\"#095F00\" size={40} />\r\n\t\t\t\t<h2 style={{ color: '#7A7A7A', paddingTop: 10 }}>{notify}</h2>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","/* eslint-disable quotes */\r\n// export const getHistoryLocal = () => {\r\n// \treturn localStorage.getItem('Translate');\r\n// };\r\n\r\n// export const deleteHistoryLocal = (id) => {\r\n// \tconst arrayHistory = localStorage.getItem('Translate') || [];\r\n// \tconst filteredItems = arrayHistory.filter(item => !id.includes(item.id));\r\n// \t// eslint-disable-next-line quotes\r\n// \tlocalStorage.setItem('Translate', filteredItems);\r\n// };\r\n\r\n// export const deleteAllHistoryLocal = () => {\r\n// \tlocalStorage.removeItem('Translate');\r\n// };\r\n\r\n// export const setHistoryLocal = (data) => {\r\n// \tconst arrayHistory = getHistoryLocal || [];\r\n// \tarrayHistory.forEach((arr) => {\r\n// \t\tif (arr.id === data.id) {\r\n// \t\t\treturn null;\r\n// \t\t} else {\r\n// \t\t\tarrayHistory.push(data);\r\n// \t\t}\r\n// \t});\r\n// \tlocalStorage.setItem('Translate', arrayHistory);\r\n// };\r\n\r\n\r\n\r\n// const arrayVocabulary = localStorage.getItem('Vocabulary') || [];\r\n\r\n// export const checkVocabularyLocal = () => {\r\n// \tconst arr = [];\r\n// \tif (arrayVocabulary.length == 0) {\r\n// \t\tlocalStorage.setItem('Vocabulary', JSON.stringify(arr));\r\n// \t}\r\n// \treturn null;\r\n// };\r\n\r\n// export const getVocabularyLocal = () => {\r\n// \treturn localStorage.getItem('Vocabulary');\r\n// };\r\n\r\n// export const deleteVocabularyLocal = (id) => {\r\n// \tconst filteredItems = arrayVocabulary.filter(item => !id.includes(item.id));\r\n// \tlocalStorage.setItem('Vocabulary', filteredItems);\r\n// };\r\n\r\n// export const deleteAllVocabularyLocal = () => {\r\n// \tlocalStorage.removeItem('Vocabulary');\r\n// };\r\n\r\n\r\n// export const setVocabularyLocal = (data) => {\r\n// \t// eslint-disable-next-line quotes\r\n// \tconsole.log(\"🚀 ~ file: localStorageHelper.js ~ line 56 ~ setVocabularyLocal ~ data\", data);\r\n\r\n// \tif (arrayVocabulary.length == 0) {\r\n// \t\tarrayVocabulary.push(data);\r\n// \t} else {\r\n// \t\tarrayVocabulary.map((arr) => {\r\n// \t\t\tif (arr.id === data.id) {\r\n// \t\t\t\treturn null;\r\n// \t\t\t} else {\r\n// \t\t\t\tarrayVocabulary.push(data);\r\n// \t\t\t}\r\n// \t\t});\r\n// \t}\r\n// \tlocalStorage.setItem('Vocabulary', arrayVocabulary);\r\n// };\r\n\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { HISTORY_KEY, DICT_KEY } from '../constants/envVar';\r\n// THE DICTIONARY IS AN ARRAY\r\n/**\r\n * Returns true if value to be used is an object having keys: textTranslateFrom, textTranslateTo.\r\n *\r\n * @author AnLG\r\n * @param {object} value object to be checked\r\n * @return {boolean} true/false.\r\n */\r\nconst isValValid = (value) => {\r\n\tconst allKeys = Object.keys(value);\r\n\t// console.log(allKeys);\r\n\tif (!(typeof value === 'object' && allKeys.length === 7)) {\r\n\t\t// console.warn(\r\n\t\t//   'Invalid value, need keys: textTranslateFrom, textTranslateTo',\r\n\t\t// );\r\n\t\treturn false;\r\n\t}\r\n\tconst requiredKeys = [\r\n\t\t'textTranslateFrom',\r\n\t\t'textTranslateTo',\r\n\t\t'textFrom',\r\n\t\t'codeFrom',\r\n\t\t'textTo',\r\n\t\t'codeTo',\r\n\t\t'isSave'\r\n\t];\r\n\tconst doesContainAllKeys = requiredKeys.every((item) => allKeys.includes(item));\r\n\tif (!doesContainAllKeys) {\r\n\t\t// console.warn(\r\n\t\t//   'Invalid value, need keys: textTranslateFrom, textTranslateTo',\r\n\t\t// );\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn true;\r\n};\r\n\r\nconst genId = () => Date.now().toString();\r\n\r\n/**\r\n * Create a new record for user dictionary and return the added record, return null otherwise.\r\n *\r\n * @author AnLG\r\n * @param {object} value object to added\r\n * @return {object} added record or null.\r\n */\r\nexport const createRecord = async (value) => {\r\n\tif (!isValValid(value)) {\r\n\t\treturn null;\r\n\t}\r\n\ttry {\r\n\t\tconst dictData = await localStorage.getItem(HISTORY_KEY);\r\n\t\tconst addedId = genId();\r\n\t\t// console.log(addedId);\r\n\t\t// if there is no dict data, create new one\r\n\t\tif (dictData === null) {\r\n\t\t\tconst addedRecord = { ...value, id: addedId };\r\n\t\t\tconst blankArray = [];\r\n\t\t\tblankArray.splice(0, 0, addedRecord);\r\n\t\t\tawait localStorage.setItem(HISTORY_KEY, JSON.stringify(blankArray));\r\n\t\t\treturn { ...addedRecord };\r\n\t\t}\r\n\r\n\t\tconst dictDataArr = JSON.parse(dictData);\r\n\t\tconst addedRecord = { id: addedId, ...value };\r\n\t\tdictDataArr.splice(0, 0, addedRecord);\r\n\t\tif (dictDataArr.length > 10) {\r\n\t\t\tdictDataArr.pop();\r\n\t\t}\r\n\t\tawait localStorage.setItem(HISTORY_KEY, JSON.stringify(dictDataArr));\r\n\t\treturn { ...addedRecord };\r\n\t} catch (error) {\r\n\t\t// console.warn(error);\r\n\t\treturn null;\r\n\t}\r\n};\r\n/**\r\n * Get list of words in user translation history, return blank array if there is none.\r\n *\r\n * @author AnLG\r\n * @return {array} list of words.\r\n */\r\nexport const listRecord = async () => {\r\n\t// const limit = 10;\r\n\t// const offset = 0;\r\n\ttry {\r\n\t\tconst dictData = await localStorage.getItem(HISTORY_KEY);\r\n\t\tif (dictData === null) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\t\tconst dictDataArr = JSON.parse(dictData);\r\n\t\t// const slicedData = dictDataArr.slice(offset, offset + limit);\r\n\t\treturn dictDataArr;\r\n\t} catch (error) {\r\n\t\t// console.warn(error);\r\n\t\treturn [];\r\n\t}\r\n};\r\n/**\r\n * Get list of words in user translation history, return blank array if there is none.\r\n *\r\n * @author AnLG\r\n * @return {array} list of words.\r\n */\r\nexport const listRecordLimit = async () => {\r\n\tconst limit = 3;\r\n\tconst offset = 0;\r\n\ttry {\r\n\t\tconst dictData = await localStorage.getItem(HISTORY_KEY);\r\n\t\tif (dictData === null) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\t\tconst dictDataArr = JSON.parse(dictData);\r\n\t\tconst slicedData = dictDataArr.slice(offset, offset + limit);\r\n\t\t// console.log(`slide data ${JSON.stringify(slicedData)}`);\r\n\t\treturn slicedData;\r\n\t} catch (error) {\r\n\t\t// console.warn(error);\r\n\t\treturn [];\r\n\t}\r\n};\r\n/**\r\n * Delete and then return the deleted record, return null otherwise.\r\n *\r\n * @author AnLG\r\n * @param {number} id id to be deleted\r\n * @return {boolean} true or null.\r\n */\r\nexport const removeRecord = async (id) => {\r\n\ttry {\r\n\t\tconst dictData = await localStorage.getItem(HISTORY_KEY);\r\n\t\tif (dictData === null) {\r\n\t\t\t// console.warn('Nothing to delete');\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet dictDataArr = JSON.parse(dictData);\r\n\t\tdictDataArr = dictDataArr.filter((item) => item.id !== id);\r\n\t\t// const deletedRecord = { ...dictDataArr[deletedID] };\r\n\t\t// dictDataArr.splice(deletedID, 1);\r\n\t\tawait localStorage.setItem(HISTORY_KEY, JSON.stringify(dictDataArr));\r\n\t\treturn true;\r\n\t} catch (error) {\r\n\t\t// console.warn(error);\r\n\t\treturn null;\r\n\t}\r\n};\r\n\r\n/**\r\n * Delete and then return the deleted record, return null otherwise.\r\n *\r\n * @author AnLG\r\n * @param {number} id id to be deleted\r\n * @return {object} deleted record or null.\r\n */\r\nexport const removeAllRecord = async () => {\r\n\ttry {\r\n\t\tawait localStorage.removeItem(HISTORY_KEY);\r\n\t\treturn true;\r\n\t} catch (error) {\r\n\t\t// console.warn(error);\r\n\t\treturn null;\r\n\t}\r\n};\r\n\r\n/**\r\n * Update and then return the updated record, return null otherwise.\r\n *\r\n * @author quanganh\r\n * @param {number} id id to be deleted\r\n * @return {boolean} deleted record or null.\r\n */\r\nexport const updateRecord = async (id) => {\r\n\ttry {\r\n\t\t// const dictData = await localStorage.getItem(DICT_KEY);\r\n\t\t// if (dictData === null) {\r\n\t\t// \t// console.warn('Nothing to delete');\r\n\t\t// \treturn null;\r\n\t\t// }\r\n\t\t// let dictDataArr = JSON.parse(dictData);\r\n\t\t// for (let i = 1; i <= dictDataArr.length; i++) {\r\n\t\t// \tif (dictDataArr[i].id === id) {\r\n\t\t// \t\treturn false;\r\n\t\t// \t}\r\n\t\t// }\r\n\r\n\t\tconst hisData = await localStorage.getItem(HISTORY_KEY);\r\n\t\tif (hisData === null) {\r\n\t\t\t// console.warn('Nothing to delete');\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet hisDataArr = JSON.parse(hisData);\r\n\r\n\t\t// for (let i = 0; i <= hisDataArr.length; i++) {\r\n\t\t// \tif (hisDataArr[i].id === id) {\r\n\t\t// \t\tif (hisDataArr[i].isSave === true) {\r\n\t\t// \t\t\treturn null;\r\n\t\t// \t\t}\r\n\t\t// \t}\r\n\t\t// }\r\n\r\n\t\tconst hisDataArr1 = [];\r\n\t\thisDataArr.forEach((item) => {\r\n\t\t\tif (item.id == id) {\r\n\t\t\t\titem.isSave = !item.isSave;\r\n\t\t\t}\r\n\t\t\thisDataArr1.push(item);\r\n\t\t});\r\n\r\n\t\tawait localStorage.setItem(HISTORY_KEY, JSON.stringify(hisDataArr1));\r\n\r\n\t\treturn true;\r\n\t} catch (error) {\r\n\t\tconsole.warn(error);\r\n\t\treturn null;\r\n\t}\r\n};\r\n\r\n\r\n/**\r\n * Update and then return the updated record, return null otherwise.\r\n *\r\n * @author quanganh\r\n * @return {boolean} deleted record or null.\r\n */\r\nexport const updateAllRecord = async () => {\r\n\ttry {\r\n\t\tconst dictData = await localStorage.getItem(DICT_KEY);\r\n\t\tif (dictData === null) {\r\n\t\t\t// console.warn('Nothing to delete');\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet dictDataArr = JSON.parse(dictData);\r\n\r\n\t\t// const dictDataArr1 = [];\r\n\t\t// await dictDataArr.forEach(async (item) => {\r\n\r\n\t\t// });\r\n\t\tfor (let i = 0; i < dictDataArr.length; i += 1) {\r\n\t\t\tawait updateRecord(dictDataArr[i].id);\r\n\t\t}\r\n\r\n\r\n\t\t// await localStorage.setItem(HISTORY_KEY, JSON.stringify(dictDataArr1));\r\n\t\treturn true;\r\n\t} catch (error) {\r\n\t\tconsole.warn(error);\r\n\t\treturn null;\r\n\t}\r\n};","import React from 'react';\r\n\r\nexport const ReloadContext = React.createContext();","/* eslint-disable quotes */\r\nimport React, { useContext, useState, useEffect } from 'react';\r\nimport styles from './historyStyle.module.css';\r\nimport { BsArrowRight } from 'react-icons/bs';\r\nimport { FiTrash2 } from 'react-icons/fi';\r\nimport { AiOutlineStar } from 'react-icons/ai';\r\nimport { AiFillStar } from 'react-icons/ai';\r\nimport * as historyHelperHis from '../../helpers/localStorageHistoryHelper.js';\r\nimport * as historyHelperDict from '../../helpers/localStorageDictHelpers.js';\r\nimport { ReloadContext } from '../../context/reloadContext';\r\n\r\nexport default function ItemHistory() {\r\n\t// eslint-disable-next-line react/prop-types\r\n\tconst Reload = useContext(ReloadContext);\r\n\t// const { historyData } = props || [];\r\n\tconst [historyData, setHistoryData] = useState([]);\r\n\r\n\tconst getAllHistory = async () => {\r\n\t\tconst userHistoryData = await historyHelperHis.listRecord();\r\n\t\tsetHistoryData(userHistoryData);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetAllHistory();\r\n\t}, [Reload.reload]);\r\n\r\n\tconst SaveTranslate = (id) => {\r\n\t\thistoryData.forEach(async (history) => {\r\n\t\t\tif (history.id === id) {\r\n\t\t\t\tconst saveWord = {\r\n\t\t\t\t\tid: history.id,\r\n\t\t\t\t\ttextFrom: history.textFrom,\r\n\t\t\t\t\ttextTo: history.textTo,\r\n\t\t\t\t\ttextTranslateFrom: history.textTranslateFrom,\r\n\t\t\t\t\ttextTranslateTo: history.textTranslateTo,\r\n\t\t\t\t\tcodeFrom: history.codeFrom,\r\n\t\t\t\t\tcodeTo: history.codeTo,\r\n\t\t\t\t};\r\n\t\t\t\tawait historyHelperHis.updateRecord(id);\r\n\t\t\t\tawait historyHelperDict.createRecord(saveWord);\r\n\t\t\t\tawait Reload.setReload(!Reload.reload);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst removeHisTran = async (id) => {\r\n\t\tawait historyHelperHis.removeRecord(id);\r\n\t\tReload.setReload(!Reload.reload);\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{historyData.map((history, id) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div key={id} style={{ width: '100%', borderBottom: 'solid', borderBottomWidth: 0.5, borderColor: '#F0F0F0' }}>\r\n\t\t\t\t\t\t<div style={{ display: 'flex', marginRight: 10, marginLeft: 10, justifyContent: 'space-between' }}>\r\n\t\t\t\t\t\t\t<div style={{ flexDirection: 'row', display: 'flex', padding: '10px 0 0 5px' }}>\r\n\t\t\t\t\t\t\t\t<div style={{ color: '#797979', fontSize: '14px' }}>{history.textFrom}</div>\r\n\t\t\t\t\t\t\t\t<div style={{ color: '#797979', fontSize: '14px' }}><BsArrowRight size={20} /></div>\r\n\t\t\t\t\t\t\t\t<div style={{ color: '#797979', fontSize: '14px' }}>{history.textTo}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div style={{ marginTop: 5, textAlignLast: 'right' }}>\r\n\t\t\t\t\t\t\t\t{history.isSave ?\r\n\t\t\t\t\t\t\t\t\t<button className={styles.buttonUtility} onClick={() => SaveTranslate(history.id)} disabled>\r\n\t\t\t\t\t\t\t\t\t\t<AiFillStar size={20} color=\"#FBBC04\" />\r\n\t\t\t\t\t\t\t\t\t</button> : <button className={styles.buttonUtility} onClick={() => SaveTranslate(history.id)}>\r\n\t\t\t\t\t\t\t\t\t\t<AiOutlineStar size={20} color=\"#000000\" />\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t<button className={styles.buttonUtility} onClick={() => removeHisTran(history.id)}>\r\n\t\t\t\t\t\t\t\t\t<FiTrash2 size={20} color=\"#095F00\" />\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div style={{ padding: '2px 0 0 15px' }}>\r\n\t\t\t\t\t\t\t<p style={{ margin: 0 }}>{history.textTranslateFrom}</p>\r\n\t\t\t\t\t\t\t<p style={{ margin: 0 }}>{history.textTranslateTo}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</>\r\n\t);\r\n}\r\n","/* eslint-disable quotes */\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport styles from './historyStyle.module.css';\r\nimport { BsArrowRight } from 'react-icons/bs';\r\nimport { FiTrash2 } from 'react-icons/fi';\r\nimport * as dictHelpers from '../../helpers/localStorageDictHelpers.js';\r\nimport * as HistoryHelpers from '../../helpers/localStorageHistoryHelper.js';\r\nimport { ReloadContext } from '../../context/reloadContext';\r\n\r\nexport default function ItemVocabulary() {\r\n\t// eslint-disable-next-line react/prop-types\r\n\tconst Reload = useContext(ReloadContext);\r\n\tconst [dictData, setDictData] = useState([]);\r\n\tconst getAllTranslationDict = async () => {\r\n\t\tconst userDictData = await dictHelpers.listRecord();\r\n\t\tsetDictData(userDictData);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetAllTranslationDict();\r\n\t}, [Reload.reload]);\r\n\r\n\tconst onRemoveDict = async (id) => {\r\n\t\tawait HistoryHelpers.updateRecord(id);\r\n\t\tawait dictHelpers.removeRecord(id);\r\n\t\tReload.setReload(prevReload => !prevReload);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{\r\n\t\t\t\tdictData.map((dict, id) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div key={id} style={{ width: '100%', borderBottom: 'solid', borderBottomWidth: 0.5, borderColor: '#F0F0F0' }}>\r\n\t\t\t\t\t\t\t<div style={{ display: 'flex', marginRight: 10, marginLeft: 10, justifyContent: 'space-between' }}>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<div style={{ flexDirection: 'row', display: 'flex' }}>\r\n\t\t\t\t\t\t\t\t\t\t<div style={{ marginTop: 5, marginLeft: 5, color: '#797979' }}>{dict.textFrom}</div>\r\n\t\t\t\t\t\t\t\t\t\t<div style={{ marginTop: 5, marginLeft: 5, color: '#797979' }}><BsArrowRight size={20} /></div>\r\n\t\t\t\t\t\t\t\t\t\t<div style={{ marginTop: 5, marginLeft: 5, color: '#797979' }}>{dict.textTo}</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div style={{ marginTop: 5, textAlignLast: 'right' }}>\r\n\t\t\t\t\t\t\t\t\t<button className={styles.buttonUtility} onClick={() => onRemoveDict(dict.id)}><FiTrash2 size={20} color=\"#095F00\" /></button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div style={{ marginRight: 10, flex: 1, marginLeft: 15, marginBottom: 10 }}>\r\n\t\t\t\t\t\t\t\t<p style={{ margin: 0 }}>{dict.textTranslateFrom}</p>\r\n\t\t\t\t\t\t\t\t<p style={{ margin: 0 }}>{dict.textTranslateTo}</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t</>\r\n\t);\r\n}\r\n","/* eslint-disable quotes */\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n\tContainer,\r\n\tRow,\r\n\tCol,\r\n\tTabs,\r\n\tTab\r\n} from 'react-bootstrap';\r\nimport styles from './historyStyle.module.css';\r\nimport EmptyHistory from './EmptyHistory';\r\nimport EmptyVocabulary from './EmptyVocabulary';\r\nimport ItemHistory from './ItemHistory';\r\nimport ItemVocabulary from './ItemVocabulary';\r\n// import { AiOutlineReload } from 'react-icons/ai';\r\nimport './HistoryTranslate.css';\r\nimport { useTranslation } from 'react-i18next';\r\nimport * as historyHelperHis from '../../helpers/localStorageHistoryHelper.js';\r\nimport * as historyHelperDict from '../../helpers/localStorageDictHelpers.js';\r\nimport { ReloadContext } from '../../context/reloadContext';\r\nimport { useSelector } from 'react-redux';\r\nimport Fomart from './Format.json';\r\n\r\nconst DoHaveHistoryData = () => {\r\n\tconst Reload = useContext(ReloadContext);\r\n\tconst { t } = useTranslation();\r\n\tconst [isHistoryData, setIsHistoryData] = useState(null);\r\n\tconst { fromText, toText, direction } = useSelector((state) => state.translateReducer);\r\n\r\n\tconst addNewHistory = async () => {\r\n\t\tconst newHistory = {\r\n\t\t\t...Fomart[direction],\r\n\t\t\ttextTranslateFrom: fromText,\r\n\t\t\ttextTranslateTo: toText\r\n\t\t};\r\n\t\tawait historyHelperHis.createRecord(newHistory);\r\n\t};\r\n\r\n\tconst removeHisTranAll = async () => {\r\n\t\tawait historyHelperHis.removeAllRecord();\r\n\t\tReload.setReload(prevReload => !prevReload);\r\n\t};\r\n\r\n\tconst getAllTranslationHistory = async () => {\r\n\t\tconst userHistoryData = await historyHelperHis.listRecord();\r\n\t\tif (userHistoryData.length >= 1) {\r\n\t\t\tsetIsHistoryData(true);\r\n\t\t} else {\r\n\t\t\tsetIsHistoryData(false);\r\n\t\t}\r\n\t};\r\n\r\n\t// const LoadTranslationHistory = () => {\r\n\t// \tReload.setReload(prevReload => !prevReload);\r\n\t// };\r\n\r\n\tuseEffect(() => {\r\n\t\tgetAllTranslationHistory();\r\n\t}, [Reload.reload]);\r\n\r\n\tuseEffect(() => {\r\n\t\taddNewHistory();\r\n\t\tReload.setReload(prevReload => !prevReload);\r\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [fromText, toText]);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Row style={{ borderBottom: '1px solid #F0F0F0' }}>\r\n\t\t\t\t<Col className={styles.title_history}>{t('History.lichsudadich')} </Col>\r\n\t\t\t\t<Col style={{ textAlign: 'end', alignSelf: 'center' }}>\r\n\t\t\t\t\t{/* <button className={styles.buttonUtility} onClick={LoadTranslationHistory}><AiOutlineReload size={25} color=\"#095F00\" /></button> */}\r\n\t\t\t\t\t{isHistoryData?(\r\n\t\t\t\t\t\t<button className={styles.buttonUtility} onClick={removeHisTranAll}>Xóa toàn bộ lịch sử</button>\r\n\t\t\t\t\t):('')}\r\n\t\t\t\t\t\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row>\r\n\t\t\t\t{\r\n\t\t\t\t\t// eslint-disable-next-line no-constant-condition\r\n\t\t\t\t\tisHistoryData ? <ItemHistory /> : <EmptyHistory notify={t('History.title1')} />\r\n\t\t\t\t}\r\n\t\t\t</Row>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst DoHaveDictData = () => {\r\n\tconst Reload = useContext(ReloadContext);\r\n\tconst { t } = useTranslation();\r\n\tconst [isDictData, setIsDictData] = useState(null);\r\n\r\n\tconst getAllTranslationDict = async () => {\r\n\t\tconst userDictData = await historyHelperDict.listRecord();\r\n\t\tif (userDictData.length >= 1) {\r\n\t\t\tsetIsDictData(true);\r\n\t\t} else {\r\n\t\t\tsetIsDictData(false);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetAllTranslationDict();\r\n\t}, [Reload.reload]);\r\n\r\n\tconst removeDictTranAll = async () => {\r\n\t\tawait historyHelperHis.updateAllRecord();\r\n\t\tawait historyHelperDict.removeAllRecord();\r\n\t\tReload.setReload(prevReload => !prevReload);\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Row style={{ borderBottom: '1px solid #F0F0F0' }}>\r\n\t\t\t\t<Col className={styles.title_history}>{t('History.tuvungdaluu')}</Col>\r\n\t\t\t\t<Col style={{ textAlign: 'end', alignSelf: 'center' }}>\r\n\t\t\t\t\t{isDictData?(\r\n\t\t\t\t\t\t<button className={styles.buttonUtility} onClick={removeDictTranAll} >Xóa toàn bộ từ vựng</button>\r\n\t\t\t\t\t):('')}\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row className={styles.boxTranslate_history}>\r\n\t\t\t\t{\r\n\t\t\t\t\t// eslint-disable-next-line no-constant-condition\r\n\t\t\t\t\tisDictData ? <ItemVocabulary /> : <EmptyVocabulary notify={t('History.title2')} />\r\n\t\t\t\t}\r\n\t\t\t</Row>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default function HistoryTranslate() {\r\n\r\n\r\n\tconst { t } = useTranslation();\r\n\tconst [reload, setReload] = useState(false);\r\n\tuseContext(ReloadContext);\r\n\r\n\treturn (\r\n\t\t<ReloadContext.Provider value={{ reload: reload, setReload: setReload }}>\r\n\t\t\t<Container fluid>\r\n\t\t\t\t<Row style={{ marginTop: '20px' }}>\r\n\t\t\t\t\t<Col md={{ span: 6, offset: 3 }} className={styles.content__history}>\r\n\t\t\t\t\t\t<Tabs defaultActiveKey=\"home\" id=\"uncontrolled-tab-examples\">\r\n\t\t\t\t\t\t\t<Tab eventKey=\"home\" title={t('History.lichsu')} tabClassName=\"Tab_style\" >\r\n\t\t\t\t\t\t\t\t<DoHaveHistoryData />\r\n\t\t\t\t\t\t\t</Tab>\r\n\t\t\t\t\t\t\t<Tab eventKey=\"profile\" title={t('History.tuvung')} tabClassName=\"Tab_style\">\r\n\t\t\t\t\t\t\t\t<DoHaveDictData />\r\n\t\t\t\t\t\t\t</Tab>\r\n\t\t\t\t\t\t</Tabs>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row >\r\n\t\t\t</Container >\r\n\t\t</ReloadContext.Provider>\r\n\t);\r\n}","/* eslint-disable quotes */\r\nimport React from 'react';\r\nimport './App.css';\r\n// import { useTranslation  } from 'react-i18next'; \r\n// import { useSelector, useDispatch } from 'react-redux';\r\n// import { sayAnDepTrai } from './redux/actions/testAction';\r\nimport TranslateScreen from './screens/translateScreen/translateScreen';\r\nimport HistoryTranslate from './screens/HistoryTranslate';\r\n\r\nfunction App() {\r\n\t// const testData = useSelector(state => state.testReducer.anDepTrai);\r\n\t// const dispatch = useDispatch();\r\n\t// const { t } = useTranslation();\r\n\t// const testContent = 'Đại tỉ phú An đẹp trai wooooo kakakakakaka';\r\n\t// const changePraise = (e) => {\r\n\t// \te.preventDefault();\r\n\t// \tdispatch(sayAnDepTrai(testContent));\r\n\t// };\r\n\treturn (\r\n\t\t// <div className=\"App\">\r\n\t\t// \t<h1>{t('App.AnDepTrai')}</h1>\r\n\t\t// \t<h1>{testData}</h1>\r\n\t\t// \t<button onClick={changePraise}>Change</button>\r\n\t\t// </div>\r\n\t\t<>\r\n\t\t\t<TranslateScreen />\r\n\t\t\t<HistoryTranslate />\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\r\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n\t\t\tgetCLS(onPerfEntry);\r\n\t\t\tgetFID(onPerfEntry);\r\n\t\t\tgetFCP(onPerfEntry);\r\n\t\t\tgetLCP(onPerfEntry);\r\n\t\t\tgetTTFB(onPerfEntry);\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\n// the translations\r\n// (tip move them in a JSON file and import them)\r\nconst resources = {\r\n\tvi: {\r\n\t\t// eslint-disable-next-line no-undef\r\n\t\ttranslation: require('./translations/vi.json'),\r\n\t}\r\n};\r\n\r\ni18n\r\n\t.use(initReactI18next) // passes i18n down to react-i18next\r\n\t.init({\r\n\t\tresources,\r\n\t\tlng: 'vi',\r\n\t\tfallbackLng: 'vi',\r\n\t\tdebug: true,\r\n\t\t// nsSeparator: false,\r\n\t\tkeySeparator: '.',\r\n\t\t// pluralSeparator: false,\r\n\t\t// contextSeparator: false,\r\n\t\tinterpolation: {\r\n\t\t\tescapeValue: false // react already safes from xss\r\n\t\t}\r\n\t});\r\n\r\nexport default i18n;","import { SAY_AN_DEP_TRAI } from '../actionTypes';\r\n\r\nconst initialState = {\r\n\tanDepTrai: 'An khá là đẹp trai',\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\tcase SAY_AN_DEP_TRAI: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tanDepTrai: action.payload.content,\r\n\t\t};\r\n\t}\r\n\tdefault:\r\n\t\treturn state;\r\n\t}\r\n}\r\n","import { CREATE_TRANSLATION } from '../actionTypes';\r\n\r\nconst initialState = {\r\n\tfromText: '',\r\n\ttoText: '',\r\n\tdirection: '',\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\tcase CREATE_TRANSLATION: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tfromText: action.payload.fromText,\r\n\t\t\ttoText: action.payload.toText,\r\n\t\t\tdirection: action.payload.direction,\r\n\t\t};\r\n\t}\r\n\tdefault:\r\n\t\treturn state;\r\n\t}\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport testReducer from './testReducer';\r\nimport translateReducer from './translateReducer';\r\n\r\nexport default combineReducers({ testReducer, translateReducer });\r\n","import { createStore,applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootreducer from './reducers';\r\n\r\n\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootreducer, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './i18n';\r\nimport store from './redux/store';\r\nimport './custom.scss';\r\nimport NotificationProvider from './components/NotificationProvider';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<Provider store={store}>\r\n\t\t\t<NotificationProvider>\r\n\t\t\t\t<App />\r\n\t\t\t</NotificationProvider>\r\n\t\t</Provider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerTop\":\"translateStyle_headerTop__zKgK-\",\"title\":\"translateStyle_title__3JYUm\",\"documentOption\":\"translateStyle_documentOption__2ohlb\",\"showToast\":\"translateStyle_showToast__BcZH9\",\"showToastCopy\":\"translateStyle_showToastCopy__3Xt-B\",\"showToastDict\":\"translateStyle_showToastDict__ntBAE\",\"content\":\"translateStyle_content__1vMBm\",\"buttonExchange\":\"translateStyle_buttonExchange__1gjc4\",\"boxTranslate\":\"translateStyle_boxTranslate__3h29N\",\"btn\":\"translateStyle_btn__3ILUi\",\"from_language\":\"translateStyle_from_language__1Vx3x\",\"to_language\":\"translateStyle_to_language__37xmE\",\"buttonUtility\":\"translateStyle_buttonUtility__2n5e9\",\"resultTranslate_bandich\":\"translateStyle_resultTranslate_bandich__lUjLn\",\"resultTranslate_dadich\":\"translateStyle_resultTranslate_dadich__1Z0Vd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerTop\":\"historyStyle_headerTop__3GegM\",\"title\":\"historyStyle_title__1NVBE\",\"title_history\":\"historyStyle_title_history__3tqgI\",\"content\":\"historyStyle_content__QN2Ct\",\"content__history\":\"historyStyle_content__history__AkNrm\",\"buttonExchange\":\"historyStyle_buttonExchange__2gbwe\",\"boxTranslate\":\"historyStyle_boxTranslate__1YbQk\",\"btn\":\"historyStyle_btn__2nPp3\",\"from_language\":\"historyStyle_from_language__2-FqC\",\"to_language\":\"historyStyle_to_language__5u3K7\",\"buttonUtility\":\"historyStyle_buttonUtility__2qwp0\",\"resultTranslate_bandich\":\"historyStyle_resultTranslate_bandich__3i1uB\",\"resultTranslate_dadich\":\"historyStyle_resultTranslate_dadich__2-wTg\"};"],"sourceRoot":""}